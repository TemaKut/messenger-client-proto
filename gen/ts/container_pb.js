// source: container.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var response_pb = require('./response_pb.js');
goog.object.extend(proto, response_pb);
var update_pb = require('./update_pb.js');
goog.object.extend(proto, update_pb);
var error_pb = require('./error_pb.js');
goog.object.extend(proto, error_pb);
goog.exportSymbol('proto.messenger.ServerMessageContainer', null, global);
goog.exportSymbol('proto.messenger.ServerMessageContainer.DataCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.messenger.ServerMessageContainer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.messenger.ServerMessageContainer.oneofGroups_);
};
goog.inherits(proto.messenger.ServerMessageContainer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.messenger.ServerMessageContainer.displayName = 'proto.messenger.ServerMessageContainer';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.messenger.ServerMessageContainer.oneofGroups_ = [[11,12,13]];

/**
 * @enum {number}
 */
proto.messenger.ServerMessageContainer.DataCase = {
  DATA_NOT_SET: 0,
  RESPONSE: 11,
  UPDATE: 12,
  ERROR: 13
};

/**
 * @return {proto.messenger.ServerMessageContainer.DataCase}
 */
proto.messenger.ServerMessageContainer.prototype.getDataCase = function() {
  return /** @type {proto.messenger.ServerMessageContainer.DataCase} */(jspb.Message.computeOneofCase(this, proto.messenger.ServerMessageContainer.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.messenger.ServerMessageContainer.prototype.toObject = function(opt_includeInstance) {
  return proto.messenger.ServerMessageContainer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.messenger.ServerMessageContainer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.messenger.ServerMessageContainer.toObject = function(includeInstance, msg) {
  var f, obj = {
serverTime: (f = msg.getServerTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
response: (f = msg.getResponse()) && response_pb.Response.toObject(includeInstance, f),
update: (f = msg.getUpdate()) && update_pb.Update.toObject(includeInstance, f),
error: (f = msg.getError()) && error_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.messenger.ServerMessageContainer}
 */
proto.messenger.ServerMessageContainer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.messenger.ServerMessageContainer;
  return proto.messenger.ServerMessageContainer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.messenger.ServerMessageContainer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.messenger.ServerMessageContainer}
 */
proto.messenger.ServerMessageContainer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setServerTime(value);
      break;
    case 11:
      var value = new response_pb.Response;
      reader.readMessage(value,response_pb.Response.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    case 12:
      var value = new update_pb.Update;
      reader.readMessage(value,update_pb.Update.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 13:
      var value = new error_pb.Error;
      reader.readMessage(value,error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.messenger.ServerMessageContainer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.messenger.ServerMessageContainer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.messenger.ServerMessageContainer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.messenger.ServerMessageContainer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      response_pb.Response.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      update_pb.Update.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      error_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp server_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.messenger.ServerMessageContainer.prototype.getServerTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.messenger.ServerMessageContainer} returns this
*/
proto.messenger.ServerMessageContainer.prototype.setServerTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.messenger.ServerMessageContainer} returns this
 */
proto.messenger.ServerMessageContainer.prototype.clearServerTime = function() {
  return this.setServerTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.messenger.ServerMessageContainer.prototype.hasServerTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Response response = 11;
 * @return {?proto.messenger.Response}
 */
proto.messenger.ServerMessageContainer.prototype.getResponse = function() {
  return /** @type{?proto.messenger.Response} */ (
    jspb.Message.getWrapperField(this, response_pb.Response, 11));
};


/**
 * @param {?proto.messenger.Response|undefined} value
 * @return {!proto.messenger.ServerMessageContainer} returns this
*/
proto.messenger.ServerMessageContainer.prototype.setResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.messenger.ServerMessageContainer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.messenger.ServerMessageContainer} returns this
 */
proto.messenger.ServerMessageContainer.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.messenger.ServerMessageContainer.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Update update = 12;
 * @return {?proto.messenger.Update}
 */
proto.messenger.ServerMessageContainer.prototype.getUpdate = function() {
  return /** @type{?proto.messenger.Update} */ (
    jspb.Message.getWrapperField(this, update_pb.Update, 12));
};


/**
 * @param {?proto.messenger.Update|undefined} value
 * @return {!proto.messenger.ServerMessageContainer} returns this
*/
proto.messenger.ServerMessageContainer.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.messenger.ServerMessageContainer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.messenger.ServerMessageContainer} returns this
 */
proto.messenger.ServerMessageContainer.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.messenger.ServerMessageContainer.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Error error = 13;
 * @return {?proto.messenger.Error}
 */
proto.messenger.ServerMessageContainer.prototype.getError = function() {
  return /** @type{?proto.messenger.Error} */ (
    jspb.Message.getWrapperField(this, error_pb.Error, 13));
};


/**
 * @param {?proto.messenger.Error|undefined} value
 * @return {!proto.messenger.ServerMessageContainer} returns this
*/
proto.messenger.ServerMessageContainer.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.messenger.ServerMessageContainer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.messenger.ServerMessageContainer} returns this
 */
proto.messenger.ServerMessageContainer.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.messenger.ServerMessageContainer.prototype.hasError = function() {
  return jspb.Message.getField(this, 13) != null;
};


goog.object.extend(exports, proto.messenger);
